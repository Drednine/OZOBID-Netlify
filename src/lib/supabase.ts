import { createClient } from '@supabase/supabase-js';

// ‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ Supabase
const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;
const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;
export const supabase = createClient(supabaseUrl, supabaseKey);

// üîß –ó–∞–≥–ª—É—à–∫–∞ ‚Äî –ø–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±—é–¥–∂–µ—Ç–∞
export const getBudgetSettings = async (userId: string) => {
  // –ú–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –∑–∞–ø—Ä–æ—Å –∏–∑ Supabase:
  // const { data, error } = await supabase.from('budget_settings').select('*').eq('user_id', userId);
  return {
    data: {
      campaignBudgets: [
        { campaignId: 'cmp123', budget: 5000 },
        { campaignId: 'cmp456', budget: 10000 }
      ]
    },
    error: null
  };
};

// üîß –ó–∞–≥–ª—É—à–∫–∞ ‚Äî —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±—é–¥–∂–µ—Ç–∞
export const updateBudgetSettings = async (userId: string, updatedSettings: any) => {
  // –ú–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ insert/update –≤ Supabase:
  // await supabase.from('budget_settings').upsert({ user_id: userId, ...updatedSettings });
  console.log(`Saving settings for ${userId}:`, updatedSettings);
  return {
    data: { success: true },
    error: null
  };
};
